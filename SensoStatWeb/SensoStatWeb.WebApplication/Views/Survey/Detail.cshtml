@model SensoStatWeb.WebApplication.ViewModels.SurveyViewModel

<form class="surveyCreationDetailParent" asp-action="" asp-controller="surveys">

    @if (true)
    {
        <div class="titleSurvey">
            <h1 class="Title">Nom séance : @Model.Survey.Name</h1>
            <h2>Status : <i class="fas fa-circle blueCircle"></i></h2>
        </div>
    }

    <div style="width:100%" class="spacedButtons">
        <button onclick="addInput('instruction')" class="orangeRoundedButton doubleButton">Nouvelle instruction</button>
        <button onclick="addInput('question')" class="orangeRoundedButton doubleButton">Nouvelle question</button>
    </div>

    <section class="list" id="list">

    </section>



    @if (true)
    {
        <section class="surveyButtons">
            <button class="orangeRoundedButton">Déployer séance</button>
            <button class="orangeRoundedButton">Supprimer le déploiement</button>
            <button class="orangeRoundedButton">Télécharger les liens</button>

            <button class="orangeRoundedButton">Télécharger données</button>
            <button class="orangeRoundedButton">Supprimer la séance</button>
        </section>
    }

    <input type="submit" style="margin-top:auto" class="orangeRoundedButton" value="Confirmer" />
</form>


<script>



    function addInput(name) {
        event.preventDefault();

        var list = document.getElementById('list'); // get the list

        var div = document.createElement('div'); // Create parent div
        var input = document.createElement('input'); // Create input
        var i = document.createElement('i'); // create i 

        input.placeholder = "Ajouter une " + name; // Add placeholder in input

        div.classList.add("roundedOrangeInput"); // Add class to parent div
        div.classList.add("bigInput"); // Add class to parent div

        i.onclick = deleteInput; // When click on i call deleteInput
        i.classList.add("fas"); // Add trash style to i
        i.classList.add("fa-trash-alt"); // Add trash style to i

        div.appendChild(input); // Add input to div
        div.appendChild(i);  // Add i to div


        list.appendChild(div); // Add div and child to list
    }

    function deleteInput(caller){
        caller.srcElement.parentNode.remove(); // find the parent div and remove it
    }
</script>


